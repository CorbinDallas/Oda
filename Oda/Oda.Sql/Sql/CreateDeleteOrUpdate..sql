-- this is the original 'clean' version of this SP.  This file should never be called, but is only here for reference.
create procedure CreateDeleteOrUpdate(
	@objectName varchar(100),
	@row RowUpdate READONLY,
	@overwrite bit,
	@commandType int
) as
begin
	/* 
	Updates a table -
	uses row versioning to detect dirty data
	
	0 success
	-1 =! @timestamp
	-2 record deleted
	other is generated by SQL
	*/
	set nocount on
	declare @statement nvarchar(max);
	if @commandType = 0 begin /* 0 update */
		declare @setStatement varchar(max);
		declare @primaryKeyName varchar(100);
		declare @primaryKeyValue sql_variant;
		declare @timestamp sql_variant;
		SELECT @setStatement=coalesce(@setStatement,'')+'['+keyname+'] = '+dbo.RowUpdateTableToUpdateString(keyvalue,dataType,dataLength,varCharMaxValue)
		from @row where not keyName = '[RowVersion]' and primary_key = 0;
		select @primaryKeyName = keyname,@primaryKeyValue = keyvalue from @row where primary_key = 1;
		select @timestamp = keyvalue from @row where keyName = '[RowVersion]';
		SET @setStatement = substring(@setStatement,1,LEN(@setStatement)-1);
		set @statement = 'select 0 from ['+@objectName+']'+
		' where '+@primaryKeyName+' = '''+convert(varchar(max),@primaryKeyValue)+''' and cast(['+@objectName+'].[RowVersion] as int) = '+cast(@timestamp as varchar(50));
		declare @tab table(val varchar(max));
		insert into @tab exec sp_executesql @statement;
		if exists(select 1 from @tab) or @overwrite = 1 begin
			set @statement = 'update ['+@objectName+'] set '+@setStatement+
			' where '+@primaryKeyName+' = '''+convert(varchar(max),@primaryKeyValue)+'''';
			BEGIN TRY
				exec sp_executesql @statement;
				declare @timeStampStatement nchar(255) = 'select [RowVersion] from ['+@objectName+'] where ['+@primaryKeyName+'] = '''+replace(cast(@primaryKeyValue as varchar(50)),'''','''''')+'''';
				declare @newTimeStampTable table ([RowVersion] int);
				print @timeStampStatement
				insert into @newTimeStampTable exec sp_executesql @timeStampStatement;
				declare @newTimestamp int = (select cast([RowVersion] as int) from @newTimeStampTable);
				select 0 as status,'Record updated successfully' as description, @primaryKeyValue as primaryKey,@newTimestamp as [RowVersion];
			END TRY
			BEGIN CATCH
				select ERROR_NUMBER() as status,ERROR_MESSAGE() as description, null as primaryKey;
			END CATCH;
		end else begin
			set @statement = 'select 0 from ['+@objectName+']'+
			' where '+@primaryKeyName+' = '''+convert(varchar(max),@primaryKeyValue)+'''';
			delete from @tab;
			insert into @tab exec sp_executesql @statement;
			if exists(select 0 from @tab) begin
				select -1 as status,'Record has changed since last refresh' as description, @primaryKeyValue as primaryKey,-1 as [RowVersion];
			end else begin
				select -2 as status,'The record has been deleted' as description, @primaryKeyValue as primaryKey,-1 as [RowVersion];
			end
		end
	end else if @commandType = 1 begin /* 1 insert */
		declare @namePart varchar(max);
		declare @valuePart varchar(max);
		select @primaryKeyName = keyname,@primaryKeyValue = keyvalue from @row where primary_key = 1;
		SELECT @namePart=coalesce(@namePart,'')+'['+keyname+'],',
		@valuePart=coalesce(@valuePart,'')+dbo.RowUpdateTableToUpdateString(keyvalue,dataType,dataLength,varCharMaxValue)
		from @row where not keyName = '[RowVersion]';
		SET @namePart = substring(@namePart,1,LEN(@namePart)-1);
		SET @valuePart = substring(@valuePart,1,LEN(@valuePart)-1);
		set @statement = 'insert into ['+@objectName+'] ('+@namePart+') values ('+@valuePart+')';
		if @overwrite = 1 begin
			/* delete any existing PKs with the same name when in overwrite mode to prevent PK conflicts */
			declare @delstatement nvarchar(max);
			set @delstatement = 'delete from ['+@objectName+']'+
			' where '+@primaryKeyName+' = '''+convert(varchar(max),@primaryKeyValue)+'''';
			exec sp_executesql @delstatement;
		end
		BEGIN TRY
			print @statement
			exec sp_executesql @statement;
			select 0 as status,'Record inserted successfully' as description, @primaryKeyValue as primaryKey,-1 as [RowVersion];
		END TRY
		BEGIN CATCH
			select ERROR_NUMBER() as status,ERROR_MESSAGE() as description, null as primaryKey,-1 as [RowVersion];
		END CATCH;
		
	end else if @commandType = 2 begin /* 2 delete */
		declare @dataType varchar(50);
		declare @dataLength int;
		declare @value sql_variant;
		declare @varCharMaxValue varchar(max);
		select @primaryKeyName = keyname,@primaryKeyValue = keyvalue, @dataType = dataType, @dataLength = dataLength,
		@value = keyValue, @varCharMaxValue = varCharMaxValue from @row where primary_key = 1;
		set @statement = 'delete from ['+@objectName+'] where ['+@primaryKeyName+']= '+dbo.RowUpdateTableToUpdateString(@value,@dataType,@dataLength,@varCharMaxValue)
		SET @statement = substring(@statement,1,LEN(@statement)-1);
		BEGIN TRY
			exec sp_executesql @statement;
			--print @statement
			select 0 as status,'Record deleted successfully' as description, @primaryKeyValue as primaryKey,-1 as [RowVersion];
		END TRY
		BEGIN CATCH
			select ERROR_NUMBER() as status,ERROR_MESSAGE() as description, null as primaryKey,-1 as [RowVersion];
		END CATCH;
	end
	set nocount off
end
